{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PyCon TW 2025","text":"<p>Title: zero to auto docs: using python to generate and deploy static sites</p> <p>speakers: Tiffany Gau &amp; Daniel Gau</p>"},{"location":"#1-mkdocs","title":"1\ufe0f\u20e3 MkDocs","text":"<ul> <li>Material for MkDocs</li> <li>Code Blocks</li> <li>Icons</li> <li>Admonitions</li> <li>Content Tabs</li> <li>Math</li> <li>Diagrams</li> </ul>"},{"location":"#2-deployment","title":"2\ufe0f\u20e3 Deployment","text":"<ul> <li>mkdocs gh-deploy</li> <li>github actions</li> </ul>"},{"location":"#3-auto-docs-generation","title":"3\ufe0f\u20e3 Auto Docs Generation","text":"<ul> <li>modifying mkdocs.yml</li> <li>ollama</li> <li>Auto Docs Generation</li> </ul>"},{"location":"autodocs/","title":"AutoDocs","text":"<p>We will show how to:</p> <p> use python to modify mkdocs.yml.   get response from LLM.  put  and  together. </p>"},{"location":"autodocs/#1-modifying-mkdocsyml","title":"1\ufe0f\u20e3 Modifying mkdocs.yml","text":"<pre><code>import yaml\n\nclass MyDumper(yaml.Dumper):\n    def increase_indent(self, flow=False, indentless=False):\n        return super(MyDumper, self).increase_indent(flow, False)\n\n# Create a list of filenames\nnew_pages = []\nfor i in range(5):\n    new_pages.append(f\"lesson{i}.md\")\n\n# We have [\"lesson0.md\", \"lesson1.md\", \"lesson2.md\", \"lesson3.md\", \"lesson4.md\"] in new_pages now\n\n# Read mkdocs.yml\nwith open(\"mkdocs.yml\", \"r\", encoding=\"utf-8\") as f:\n    config = yaml.safe_load(f)\n\nprint(config)\n\n# Add filename list to nav\nconfig[\"nav\"] = new_pages\n\n# Write mkdocs.yml\nwith open(\"mkdocs.yml\", \"w\", encoding=\"utf-8\") as f:\n    yaml.dump(config, f, sort_keys=False, allow_unicode=True, Dumper=MyDumper)\n</code></pre>"},{"location":"autodocs/#2-ollama","title":"2\ufe0f\u20e3 ollama","text":"<ul> <li>https://ollama.com/</li> <li>Open LLM Models</li> <li>https://github.com/ollama/ollama-python</li> </ul> <pre><code>flowchart LR\n    A[Python Code] &lt;--&gt; B[Ollama Python Library]\n    B &lt;--&gt; C[Ollama]\n    C &lt;--&gt; D[LLM]</code></pre> <p> Ollama Server</p> <p>To download a model, run the following command:</p> <pre><code>ollama pull llama3.2\n</code></pre> <p> Ollama Python Library</p> <pre><code>pip install ollama\n</code></pre> Regular Usage<pre><code>from ollama import chat\nfrom ollama import ChatResponse\n\nresponse: ChatResponse = chat(model='gemma3', messages=[\n  {\n    'role': 'user',\n    'content': 'Why is the sky blue?',\n  },\n])\nprint(response['message']['content'])\n# or access fields directly from the response object\nprint(response.message.content)\n</code></pre> Streaming Response<pre><code>from ollama import chat\n\nstream = chat(\n    model='gemma3',\n    messages=[{'role': 'user', 'content': 'Why is the sky blue?'}],\n    stream=True,\n)\n\nfor chunk in stream:\n  print(chunk['message']['content'], end='', flush=True)\n</code></pre>"},{"location":"autodocs/#3-autodocs-using-llm","title":"3\ufe0f\u20e3 Autodocs using LLM","text":"<pre><code>import os\nimport re\nimport yaml\nimport ollama\n\nclass MyDumper(yaml.Dumper):\n    def increase_indent(self, flow=False, indentless=False):\n        return super(MyDumper, self).increase_indent(flow, False)\n\n# \nMAIN_TOPIC = \"Python Tutorial\"\nTOPIC_NUMBER = 5\nMODEL_NAME = \"llama3.2\"\n\nprompt = f\"\"\"Please design {TOPIC_NUMBER} subtopics for the main topic \"{MAIN_TOPIC}\".  \nFor each subtopic, write a complete tutorial in Markdown format (including title and sections).  \nAt the beginning of each subtopic, add &lt;&lt;&lt;START&gt;&gt;&gt; and at the end add &lt;&lt;&lt;END&gt;&gt;&gt;.  \n\nDo not include any HTML tags inside the Markdown.  \nEnsure that code blocks are separated from other content by one blank line.  \n\nHere are 3 example subtopics for reference:  \n\n&lt;&lt;&lt;START&gt;&gt;&gt;\n# Subtopic 1\n\nContent 1\n&lt;&lt;&lt;END&gt;&gt;&gt;\n\n&lt;&lt;&lt;START&gt;&gt;&gt;\n# Subtopic 2\n\nContent 2\n&lt;&lt;&lt;END&gt;&gt;&gt;\n\n&lt;&lt;&lt;START&gt;&gt;&gt;\n# Subtopic 3\n\nContent 3\n&lt;&lt;&lt;END&gt;&gt;&gt;\n\nAnd so on...  \n\nPlease make sure that &lt;&lt;&lt;START&gt;&gt;&gt; and &lt;&lt;&lt;END&gt;&gt;&gt; always come in pairs.  \n\"\"\"\n\nresponse = ollama.chat(\n    model=MODEL_NAME,\n    messages=[\n        {\"role\": \"user\", \"content\": prompt}\n    ]\n)\n\noutput_text = response[\"message\"][\"content\"]\n\nwith open(\"output.txt\", \"w\", encoding=\"utf-8\") as f:\n    f.write(output_text)\n\n\n# Check if docs exists\nos.makedirs(\"docs\", exist_ok=True)\n\n# Extract content between START and END using re\n# Find all START...END blocks\nmatches = re.findall(r'&lt;&lt;&lt;START&gt;&gt;&gt;(.*?)&lt;&lt;&lt;END&gt;&gt;&gt;', output_text, re.DOTALL)\n\nnew_pages = []\n\n# Save files one by one\nfor i, content in enumerate(matches, start=1):\n    filename = f\"lesson{i}.md\"\n    new_pages.append(filename)\n    with open(f\"docs/{filename}\", \"w\", encoding=\"utf-8\") as f:\n        f.write(content.strip())  # remove blanks\n    print(f\"{filename} saved!\")\n\n# Update mkdocs.yml\nwith open(\"mkdocs.yml\", \"r\", encoding=\"utf-8\") as f:\n    config = yaml.safe_load(f)\n\nconfig[\"nav\"] = new_pages\n\nwith open(\"mkdocs.yml\", \"w\", encoding=\"utf-8\") as f:\n    yaml.dump(config, f, sort_keys=False, allow_unicode=True, Dumper=MyDumper)\n\nprint(\"mkdocs.yml updated!\")\n</code></pre>"},{"location":"deploy/","title":"Deployment","text":""},{"location":"deploy/#1-mkdocs-gh-deploy","title":"1\ufe0f\u20e3 mkdocs gh-deploy","text":"<pre><code>mkdocs gh-deploy\n</code></pre> <pre><code>mkdocs gh-deploy --force\n</code></pre> Terminal Ouput<pre><code>(myvenv) Tiffany@MacBookPro PyConTW2025 % mkdocs gh-deploy\nINFO    -  Cleaning site directory\nINFO    -  Building documentation to directory:\n           /Users/Tiffany/Desktop/PyConTW2025/site\nINFO    -  The following pages exist in the docs directory, but are not included\n           in the \"nav\" configuration:\n             - autodocs.md\n             - deploy.md\nINFO    -  Documentation built in 0.19 seconds\nWARNING -  Version check skipped: No version specified in previous deployment.\nINFO    -  Copying '/Users/Tiffany/Desktop/PyConTW2025/site' to 'gh-pages'\n           branch and pushing to GitHub.\nEnumerating objects: 75, done.\nCounting objects: 100% (75/75), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (63/63), done.\nWriting objects: 100% (75/75), 585.79 KiB | 6.58 MiB/s, done.\nTotal 75 (delta 12), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (12/12), done.\nremote: \nremote: Create a pull request for 'gh-pages' on GitHub by visiting:\nremote:      https://github.com/AllergicAlligator/PyConTW2025/pull/new/gh-pages\nremote: \nTo https://github.com/AllergicAlligator/PyConTW2025.git\n * [new branch]      gh-pages -&gt; gh-pages\nINFO    -  Your documentation should shortly be available at:\n           https://AllergicAlligator.github.io/PyConTW2025/\n(myvenv) Tiffany@MacBookPro PyConTW2025 % \n</code></pre>"},{"location":"deploy/#2-github-actions","title":"2\ufe0f\u20e3 github actions","text":"<p><code>.github/workflows/ci.yaml</code></p> <pre><code>name: ci \non:\n  push:\n    branches:\n      - master \n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV \n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: ~/.cache \n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material \n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"deploy/#references","title":"References","text":"<ul> <li>Material for MkDocs Documentation</li> </ul>"},{"location":"intro/","title":"Intro to MkDocs","text":""},{"location":"intro/#1-what-is-mkdocs","title":"1\ufe0f\u20e3 What is MkDocs?","text":"<ul> <li>MkDocs is a static site generator!</li> <li>MkDocs is written in Python!</li> <li>MkDocs converts .md to .html</li> </ul>"},{"location":"intro/#2-what-is-material-for-mkdocs","title":"2\ufe0f\u20e3 What is Material for MkDocs?","text":"<ul> <li>Material for MkDocs is a popular theme for MkDocs!</li> <li>Material for MkDocs provides cool features out of box!</li> <li>Material for MkDocs convert plain MkDocs websites to stylish doc websites1</li> </ul> <p>Tip</p> <p>Pay attention to TWO things:  Configuration.  Syntax </p>"},{"location":"intro/#code-blocks","title":"Code Blocks","text":"<ul> <li>Code Blocks</li> </ul> prime.py<pre><code>def is_prime(n):\n    if n &lt; 2:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n</code></pre> <pre><code>def is_prime(n):\n    if n &lt; 2:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n</code></pre> <pre><code>def is_prime(n):\n    if n &lt; 2:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n</code></pre>"},{"location":"intro/#icons","title":"Icons","text":"<ul> <li>Icons, Emojis</li> </ul>"},{"location":"intro/#admonitions","title":"Admonitions","text":"<ul> <li>Admonitions</li> </ul> <p>Note</p> <p>This is important!</p> <p>Tip</p> <p>Do this! Don't do that!</p> Faq <p>how are you doing?</p>"},{"location":"intro/#math","title":"Math","text":"<ul> <li>Math</li> </ul> <pre><code>\\[\n\\int_{0}^{\\infty} \\frac{x^{a-1}}{1+e^x} \\, dx \n= \\left(1 - 2^{1-a}\\right) \\Gamma(a) \\zeta(a), \\quad \\Re(a) &gt; 0\n\\]\n</code></pre> \\[ \\int_{0}^{\\infty} \\frac{x^{a-1}}{1+e^x} \\, dx  = \\left(1 - 2^{1-a}\\right) \\Gamma(a) \\zeta(a), \\quad \\Re(a) &gt; 0 \\]"},{"location":"intro/#diagrams","title":"Diagrams","text":"<ul> <li>Mermaid Live Editor</li> <li>Mermaid Tutorial</li> </ul> <pre><code>``` mermaid\ngraph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];\n```\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"}]}